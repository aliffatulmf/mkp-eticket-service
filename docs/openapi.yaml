openapi: 3.1.0
info:
  title: E-Ticketing Transportasi Publik API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

security:
  - bearerAuth: []

paths:
  /ping:
    get:
      tags:
        - Ping
      summary: Endpoint pemeriksaan koneksi
      description: Pemeriksaan koneksi sederhana untuk memverifikasi ketersediaan API
      operationId: ping
      security: []
      responses:
        '200':
          description: API sehat
          content:
            text/plain:
              schema:
                type: string
                example: "OK"

  /auth/login:
    post:
      tags:
        - Otentikasi
      summary: Login admin
      description: Otentikasi pengguna admin dengan nama pengguna dan kata sandi
      operationId: adminLogin
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'
            examples:
              admin_login:
                summary: Contoh login admin
                value:
                  username: "admin"
                  password: "password123"
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AdminLoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/refresh:
    post:
      tags:
        - Otentikasi
      summary: Refresh token JWT
      description: Hasilkan token akses baru menggunakan refresh token
      operationId: refreshToken
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
            examples:
              refresh_token:
                summary: Contoh refresh token
                value:
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token berhasil di-refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RefreshTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /admins:
    post:
      tags:
        - Manajemen Admin
      summary: Buat admin baru
      description: Buat akun pengguna admin baru
      operationId: createAdmin
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRequest'
            examples:
              create_admin:
                summary: Contoh buat admin
                value:
                  username: "admin_baru"
                  password: "kata_sandi_aman123"
      responses:
        '201':
          description: Admin berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Admin'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /admins/{id}:
    delete:
      tags:
        - Manajemen Admin
      summary: Hapus admin
      description: Hapus pengguna admin berdasarkan ID
      operationId: deleteAdmin
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '204':
          description: Admin berhasil dihapus
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /terminals:
    get:
      tags:
        - Terminal
      summary: Daftar semua terminal
      description: Dapatkan daftar semua terminal transportasi
      operationId: getAllTerminals
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Respons berhasil dengan daftar terminal
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Terminal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Terminal
      summary: Buat terminal baru
      description: Buat terminal transportasi baru
      operationId: createTerminal
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTerminalRequest'
            examples:
              create_terminal:
                summary: Contoh buat terminal
                value:
                  code: "TRM001"
                  name: "Central Terminal"
                  address: "123 Main Street, Downtown"
      responses:
        '201':
          description: Terminal berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terminal'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /terminals/{id}:
    get:
      tags:
        - Terminal
      summary: Dapatkan terminal berdasarkan ID
      description: Dapatkan detail terminal tertentu berdasarkan ID-nya
      operationId: getTerminalById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Respons berhasil dengan detail terminal
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terminal'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Terminal
      summary: Perbarui terminal
      description: Perbarui informasi terminal yang ada
      operationId: updateTerminal
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTerminalRequest'
            examples:
              update_terminal:
                summary: Contoh perbarui terminal
                value:
                  name: "Central Hub Terminal"
                  address: "123 Main Street, Downtown Area"
                  is_active: true
      responses:
        '200':
          description: Terminal berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terminal'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Terminal
      summary: Hapus terminal
      description: Hapus terminal berdasarkan ID-nya
      operationId: deleteTerminal
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '204':
          description: Terminal berhasil dihapus
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Masukkan token JWT yang diperoleh dari endpoint login admin

  schemas:
    Admin:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: "admin"
        password:
          type: string
          description: "Kata sandi tidak pernah dikembalikan dalam respons"
      required:
        - id
        - username

    CreateAdminRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
          example: "admin_baru"
        password:
          type: string
          minLength: 6
          example: "kata_sandi_aman123"
      required:
        - username
        - password

    AdminLoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "password123"
      required:
        - username
        - password

    AdminLoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        username:
          type: string
          example: "admin"
        role:
          type: string
          example: "admin"
        expires_at:
          type: integer
          format: int64
          example: 1727600000
      required:
        - token
        - refresh_token
        - username
        - role
        - expires_at

    RefreshTokenRequest:
      type: object
      properties:
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      required:
        - refresh_token

    RefreshTokenResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_at:
          type: integer
          format: int64
          example: 1727600000
      required:
        - token
        - expires_at

    Terminal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        code:
          type: string
          maxLength: 10
          example: "TRM001"
        name:
          type: string
          maxLength: 100
          example: "Central Terminal"
        address:
          type: string
          example: "123 Main Street, Downtown"
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
      required:
        - id
        - code
        - name
        - address
        - is_active
        - created_at
        - updated_at

    CreateTerminalRequest:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
          example: "TRM001"
        name:
          type: string
          maxLength: 100
          example: "Central Terminal"
        address:
          type: string
          example: "123 Main Street, Downtown"
      required:
        - code
        - name
        - address

    UpdateTerminalRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          example: "Central Hub Terminal"
        address:
          type: string
          example: "123 Main Street, Downtown Area"
        is_active:
          type: boolean
          example: true
      required:
        - name
        - address
        - is_active

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Badan permintaan tidak valid"
      required:
        - error

  responses:
    BadRequestError:
      description: Permintaan buruk - Data input tidak valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedError:
      description: Tidak sah - Token JWT tidak valid atau hilang
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundError:
      description: Tidak ditemukan - Sumber daya tidak ada
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Kesalahan server internal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Ping
    description: Endpoint pemeriksaan koneksi
  - name: Otentikasi
    description: Operasi otentikasi JWT untuk pengguna admin
  - name: Manajemen Admin
    description: Operasi manajemen akun pengguna admin
  - name: Terminal
    description: Operasi manajemen terminal transportasi